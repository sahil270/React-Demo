const quotes = [
    "TL;DR: Sometimes a short thought can bring amazing ideas.",
    "There are only two hard things in Computer Science: cache invalidation and naming things.",
    "Make illegal states unrepresentable.",
    "First make the change easy (warning: this might be hard), then make the easy change.",
    "Simple things should be simple, complex things should be possible.",
    "Before software can be reusable it first has to be usable.",
    "Simplicity is prerequisite for reliability.",
    "Smells are certain structures in the code that suggest (sometimes they scream for) the possibility of refactoring.",
    "Object thinking focuses our attention on the problem space rather than the solution space.",
    "80 percent of my problems are simple logic errors. 80 percent of the remaining problems are pointer errors. The remaining problems are hard.",
    "A programming language is a system of notation for describing computations. A useful programming language must therefore be suited for both description (i.e., for human writers and readers of programs) and for computation (i.e., for efficient implementation on computers). But human beings and computers are so different that it is difficult to find notational devices that are well suited to the capabilities of both.",
    "Most software today is very much like an Egyptian pyramid with millions of bricks piled on top of each other, with no structural integrity, but just done by brute force and thousands of slaves.",
    "If we want users to like our software, we should design it to behave like a likeable person.",
    "Conceptual integrity is the most important consideration in system design.",
    "Subclasses shouldn’t always share all characteristics of their parent class but will do so with inheritance. This can make a program’s design less flexible. It also introduces the possibility of calling methods on subclasses that don’t make sense or that cause errors because the methods don’t apply to the subclass.",
    "We comfort ourselves with the belief that if the customers had just been happy with what they said they needed, the design would have been fine. It’s the customer’s fault for changing the requirements on us",
    "I am not terribly dogmatical about the goto statement. I have the uncomfortable feeling that others are making a religion out of it, as if the conceptual problems of programming could be solved by a single trick, by a simple form of coding discipline!",
    "If you can get today’s work done today, but you do it in such a way that you can’t possibly get tomorrow’s work done tomorrow, then you lose.",
    "You cannot teach beginners top-down programming, because they don’t know which end is up.",
    "Programming today is a race between software engineers striving to build bigger and better idiot-proof programs, and the Universe trying to produce bigger and better idiots. So far, the Universe is winning.",
    "Either way you look at it (DRY or laziness), the idea is the same: make your program flexible. When change comes (and it always does), you’ll have a much easier time changing with it.",
    "Duplication is the primary enemy of a well-designed system.",
    "Optimism is an occupational hazard of programming: feedback is the treatment.",
    "The trick is to fix the problem you have, rather than the problem you want.",
    "Object-oriented programming languages support encapsulation, thereby improving the ability of software to be reused, refined, tested, maintained, and extended. The full benefit of this support can only be realized if encapsulation is maximized during the design process.",
    "The biggest issue on software teams is making sure everyone understands what everyone else is doing. -",
    "An error arises from treating object variables (instance variables) as if they were data attributes and then creating your hierarchy based on shared attributes. Always create hierarchies based on shared behaviors, side.",
    "You can prove anything by mentioning another computer language.",
    "The purpose of computing is insight, not numbers.",
    "Telling a programmer there’s already a library to do X is like telling a songwriter there’s already a song about love.",
    "In a purely functional program, the value of a [constant] never changes, and yet, it changes all the time! A paradox!",
    "When someone says, “I want a programming language in which I need only say what I want done,” give him a lollipop.",
    "A data structure is just a stupid programming language.",
    "Hackers are arrogant geek romantics. They lack the attentive spirit of inquiry.",
    "Software is a gas; it expands to fill its container.",
    "Science is what we understand well enough to explain to a computer. Art is everything else we do.",
    "The code you write makes you a programmer. The code you delete makes you a good one. The code you don’t have to write makes you a great one.",
    "Final source code is the real software design.",
    "Learn not to add too many features right away, and get the core idea built and tested.",
    "If it doesn’t work, it doesn’t matter how fast it doesn’t work.",
    "The main activity of programming is not the origination of new independent programs, but in the integration, modification, and explanation of existing ones.",
    "I couldn’t resist the temptation to put in a null reference, simply because it was so easy to implement. This has led to innumerable errors, vulnerabilities, and system crashes, which have probably caused a billion dollars of pain and damage in the last forty years.",
    "Writing a class without its contract would be similar to producing an engineering component (electrical circuit, VLSI (Very Large Scale Integration) chip, bridge, engine…) without a spec. No professional engineer would even consider the idea.",
    "Programming is not about typing, it’s about thinking.",
    "There’s nothing more permanent than a temporary hack.",
    "Architecture is the tension between coupling and cohesion.",
    "There is an art to knowing where things should be checked and making sure that the program fails fast if you make a mistake. That kind of choosing is part of the art of simplification.",
    "No amount of elegant programming or technology will solve a problem if it is improperly specified or understood to begin with.",
    "Learning to code is useful no matter what your career ambitions are.",
    "Complexity has nothing to do with intelligence, simplicity does.",
    "Later Equals Never.",
    "When in doubt, use brute force.",
    "Computer Science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter.",
    "The Diagram is Not the Model. The model is not the diagram. It is an abstraction, a set of concepts and relationships between them.",
    "Thinking is not the ability to manipulate language; it’s the ability to manipulate concepts.",
    "Information shared by an object might or might not be part of the structure of that object. That is, the object might compute the information, or it might delegate the request for information to another object.",
    "If someone claims to have the perfect programming language, he is either a fool or a salesman or both.",
    "Programs, like people, get old. We can’t prevent aging, but we can understand its causes, limit its effects and reverse some of the damage.",
    "Walking on water and developing software from a specification are easy if both are frozen.",
    "Software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification.",
    "To me programming is more than an important practical art. It is also a gigantic undertaking in the foundations of knowledge.",
    "A programming language is a tool that has a profound influence on our thinking habits.",
    "Good design adds value faster than it adds cost.",
    "The main activity of programming is not the origination of new independent programs, but in the integration, modification, and explanation of existing ones.",
    "I’ve finally learned what ‘upward compatible’ means. It means we get to keep all our old mistakes.",
    "Make it hard to ignore error conditions. Don’t bury error codes in return values.",
    "Premature optimization is the root of all evil",
    "Object-oriented programming increases the value of these metrics by managing this complexity. The most effective tool available for dealing with complexity is abstraction. Many types of abstraction can be used, but encapsulation is the main form of abstraction by which complexity is managed in object-oriented programming.",
    "Types are essentially assertions about a program. And I think it’s valuable to have things be as absolutely simple as possible, including not even saying what the types are",
    "I’m not a great programmer; I’m just a good programmer with great habits.",
    "Don’t automate an undisciplined workflow. The computer won’t solve what the customer’s management can’t.",
    "Technology is dominated by two types of people: those who understand what they do not manage, and those who manage what they do not understand.",
    "Whenever possible, steal code.",
    "Today, most software exists, not to solve a problem, but to interface with other software.",
    "A true professional does not waste the time and money of other people by handing over software that is not reasonably free of obvious bugs; that has not undergone minimal unit testing; that does not meet the specifications and requirements; that is gold-plated with unnecessary features; or that looks like junk",
    "Beware of programmers who carry screwdrivers.",
    "God could create the world in six days because he didn’t have to make it compatible with the previous version.",
    "BASIC is to computer programming as QWERTY is to typing.",
    "At any particular point in time, the features provided by our programming languages reflect our understanding of software and programming.",
    "Every great developer you know got there by solving problems they were unqualified to solve until they actually did it.",
    "PHP is a minor evil perpetrated and created by incompetent amateurs, whereas Perl is a great and insidious evil, perpetrated by skilled but perverted professionals.",
    "Any problem in computer science can be solved with another level of indirection.",
    "I can’t be as confident about computer science as I can about biology. Biology easily has 500 years of exciting problems to work on. It’s at that level",
    "A computer once beat me at chess, but it was no match for me at kick boxing.",
    "Scientists build to learn; Engineers learn to build.",
    "The greatest obstacle to discovery is not ignorance, but the illusion of knowledge.",
    "Remember, code is your house, and you have to live in it.",
    "e best performance improvement is the transition from the nonworking state to the working state.",
    "It’s better to wait for a productive programmer to become available than it is to wait for the first available programmer to become productive.",
    "The whole of arithmetic now appeared within the grasp of mechanism.",
    "Blaming programmers has been the prevailing approach for a half century of software development: It has not solved the problem yet, so it is time to look in different directions.",
    "If you think good architecture is expensive, try bad architecture.",
    "C++ is designed to allow you to express ideas, but if you don’t have ideas or don’t have any clue about how to express them, C++ doesn’t offer much help.",
    "The only truly secure system is one that is powered off, cast in a block of concrete and sealed in a lead-lined room with armed guards.",
    "Bugs lurk in corners and congregate at boundaries.",
    "In programming, the hard part isn’t solving problems, but deciding what problems to solve.",
    "The Analytical Engine has no pretensions whatever to originate anything. It can do whatever we know how to order it to perform… But it is likely to exert an indirect and reciprocal influence on science itself.",
    "I think test-driven design is great. But you can test all you want and if you don’t know how to approach the problem, you’re not going to get a solution.",
    "One bad programmer can easily create two new jobs a year.",
    "Bugs are bugs. You write code with bugs because you do. If it’s a safe language in the sense of run-time safe, the operating system crashes instead of doing a buffer overflow in a way that’s exploitable.",
    "Temporary solutions often become permanent problems.",
    "Science is what we understand well enough to explain to a computer, Art is all the rest",
    "Those who can imagine anything, can create the impossible",
    "Copying skips understanding. Understanding is how you grow. You have to understand why something works or why something is how it is. When you copy it, you miss that. You just repurpose the last layer instead of understanding all the layers underneath.",
    "Weeks of programming can save you hours of planning.",
    "Software is like entropy: It is difficult to grasp, weighs nothing, and obeys the Second Law of Thermodynamics; i.e., it always increases.",
    "A design that doesn’t take change into account risks major redesign in the future.",
    "Your obligation is that of active participation. You should not act as knowledge-absorbing sponges, but as whetstones on which we can all sharpen our wits.",
    "The objective of cleaning is not just to clean, but to feel happiness living within that environment.",
    "Your most unhappy customers are your greatest source of learning.",
    "Technology is anything invented after you were born.",
    "I do not fear computers. I fear lack of them.",
    "The key to performance is elegance, not battalions of special cases.",
    "The fundamental problem with program maintenance is that fixing a defect has a substantial chance of introducing another.",
    "The software isn’t finished until the last user is dead.",
    "Almost without exception, the best products are developed by teams with desire to solve a problem; not a company’s need to fulfil a strategy.",
    "No one in the brief history of computing has ever written a piece of perfect software. It’s unlikely that you’ll be the first.",
    "The real hero of programming is the one who writes negative code.",
    "JavaScript is the only language that I’m aware of that people feel they don’t need to learn before they start using it.",
    "Simplicity before generality, use before reuse.",
    "Programming isn’t about what you know; it’s about what you can figure out.",
    "In general, the longer you wait before fixing a bug, the costlier (in time and money) it is to fix.",
    "Incorrect documentation is often worse than no documentation.",
    "Write shy code — modules that don’t reveal anything unnecessary to other modules and that don’t rely on other modules’ implementations.",
    "Inside every well-written large program is a well-written small program.",
    "The most unsuccessful three years in the education of cost estimators appears to be fifth-grade arithmetic.",
    "All models are wrong but some models are useful",
    "Code generation, like drinking alcohol, is good in moderation.",
    "Simplicity, carried to the extreme, becomes elegance.",
    "There have been people that suggest that we should have a back door. But the reality is if you put a back door in, that back door’s for everybody — for good guys and bad guys.",
    "You must have long-range goals to keep you from being frustrated by short-range failures.",
    "The flip side of the coin was that even good programmers and language designers tended to do terrible extensions when they were in the heat of programming, because design is something that is best done slowly and carefully.",
    "We must not blame programmers for their bugs. They belong to them only until the code is merged to the repository. After that, all bugs are ours!",
    "Do not use humans for jobs computers can do better — this is a waste of human energy and creativity, the only real resource on this planet, and demeans the human spirit.",
    "The essence of XML is this: the problem it solves is not hard, and it does not solve the problem well.",
    "The designer of a new system must not only be the implementor and the first large-scale user; the designer should also write the first user manual. If I had not participated fully in all these activities, literally hundreds of improvements would never have been made.",
    "Discovery consists of seeing what everyone else has seen and thinking what no one else has thought.",
    "The most dangerous kind of waste is the waste we do not recognize.",
    "The optimum committee has no members.",
    "No one hates software more than software developers.",
    "In a software project team of 10, there are probably 3 people who produce enough defects to make them net negative producers.",
    "The best reaction to “this is confusing, where are the docs” is to rewrite the feature to make it less confusing, not write more docs.",
    "A well installed microcode bug will be almost impossible to detect.",
    "Playing with pointers is like playing with fire. Fire is perhaps the most important tool known to man. Carefully used, fire brings enormous benefits; but when fire gets out of control, disaster strikes.",
    "Alzheimer’s Law of Programming: Looking at code you wrote more than two weeks ago is like looking at code you are seeing for the first time.",
    "If programmers got paid to remove code from software instead of writing new code, software would be a whole lot better.",
    "Forget this world and all its troubles and if possible its multitudinous Charlatans — everything in short but the Enchantress of Numbers.",
    "Software is a gas; it expands to fill its container.",
    "Most of you are familiar with the virtues of a programmer. There are three, of course: laziness, impatience, and hubris.",
    "Controlling complexity is the essence of computer programming.",
    "Playfully doing something difficult, whether useful or not, that is hacking.",
    "This ‘users are idiots, and are confused by functionality’ mentality of Gnome is a disease. If you think your users are idiots, only idiots will use it.",
    "Simple systems are not feasible because they require infinite testing.",
    "One of the best programming skills you can have is knowing when to walk away for awhile.",
    "It’s not at all important to get it right the first time. It’s vitally important to get it right the last time.",
    "The cheapest, fastest and most reliable components of a computer system are those that aren’t there.",
    "Developers are drawn to complexity like moths to a flame, frequently with the same result.",
    "My belief is still, if you get the data structures and their invariants right, most of the code will kind of write itself.",
    "There is the desire of a consumer society to have no learning curves. This tends to result in very dumbed-down products that are easy to get started on, but are generally worthless and/or debilitating.",
    "As someone who was basically a software engineer for many years, I became fascinated with how the brain functions and is put together and works in such a different fashion than computers do.",
    "The first 90 percent of the code accounts for the first 90 percent of the development time. The remaining 10 percent of the code accounts for the other 90 percent of the development time.",
    "Whether you draw diagrams that generate code or you type at a browser, you are coding.",
    "Writing software is a very intense, very personal thing. You have to have time to work your way through it, to understand it. Then debug it.",
    "The good news is: Anything is possible on your computer. The bad news is: Nothing is easy.",
    "I know testers who make good devs. I know devs who make good testers. I know Scrum Masters who make good coffee.",
    "Don’t get suckered in by the comments, they can be terribly misleading: Debug only the code.",
    "The purpose of software engineering is to control complexity, not to create it.",
    "While it is a known fact that programmers never make mistakes, it is still a good idea to humor the users by checking for errors at critical points in your program.",
    "The programmer’s primary weapon in the never-ending battle against slow system is to change the intramodular structure. Our first response should be to reorganize the modules’ data structures.",
    "Computer science is a restless infant and its progress depends as much on shifts in point of view as on the orderly development of our current concepts.",
    "Computer science is like engineering; it is all about getting something to do something, rather than just dealing with abstractions, as in the pre-Smith geology.",
    "Most of the biggest problems in software are problems of misconception.",
    "Absence of evidence is not evidence of absence.",
    "Rules of Optimization: Rule 1: Don’t do it. Rule 2 (for experts only): Don’t do it yet.",
    "Computer science inverts the normal. In normal science, you’re given a world, and your job is to find out the rules. In computer science, you give the computer the rules, and it creates the world.",
    "Before you say you can’t do something, try it.",
    "A complex system that works is invariably found to have evolved from a simple system that worked.",
    "Promoting a good developer to management is often a twofold bad move: you’ll lose a good developer and get a poor manager.",
    "It is very hard to predict, especially the future.",
    "Computer science is not about machines, in the same way that astronomy is not about telescopes. There is an essential unity of mathematics and computer science",
    "Objects are abstractions of processing. Threads are abstractions of schedule.",
    "The danger from computers is not that they will eventually get as smart as men, but that we will meanwhile agree to meet them halfway.",
    "When in doubt, leave it out.",
    "Memory is like an orgasm. It’s a lot better if you don’t have to fake it.",
    "If you’re a technical lead, you need to be coding.",
    "Getting information off the Internet is like taking a drink from a fire hydrant",
    "Don’t Gather Requirements, Dig for Them",
    "If the code and the comments disagree, then both are probably wrong.",
    "Blame the implementation, not the technique.",
    "Programming is just saying “I have a meeting in an hour, so better not start on this yet” to yourself until you die.",
    "Programmers don’t burn out on hard work, they burn out on change-with-the-wind directives and not ‘shipping’.",
    "If you’re afraid to change something it is clearly poorly designed.",
    "The best way to get the right answer on the Internet is not to ask a question, it’s to post the wrong answer.",
    "Mathematicians stand on each others’ shoulders and computer scientists stand on each others’ toes.",
    "Standards are always out of date. That’s what makes them standards.",
    "Adapting old programs to fit new machines usually means adapting new machines to behave like old ones.",
    "The wonderful thing about dynamic typing is it lets you express anything that is computable. And type systems don’t. Once you have a type system, you don’t even know what interesting programs are there.",
    "Voluminous documentation is part of the problem, not part of the solution.",
    "It is hard to write even the smallest piece of code correctly.",
    "Before you use a method in a legacy system, check to see if there are tests for it. If there aren’t, write them. When you do this consistently, you use tests as a medium of communication.",
    "The computers do what you tell them to do, not what you want them to do.",
    "Get out of the way of your developers or lose them to someone who will.",
    "The best way to get accurate information on Stack Overflow is to post something wrong and wait for corrections.",
    "The best way to start fixing a bug is to make it reproducible. After all, if you can’t reproduce it, how will you know if it is ever fixed?",
    "I think the lack of reusability comes in object-oriented languages, not in functional languages. Because the problem with object-oriented languages is they’ve got all this implicit environment that they carry around with them. You wanted a banana but what you got was a gorilla holding the banana and the entire jungle.",
    "I object to doing things that computers can do.",
    "An error doesn’t become a mistake until you refuse to correct it.",
    "Good code is its own best documentation.",
    "No amount of testing can prove a software right, a single test can prove a software wrong.",
    "The world is changing, and I believe that, if I want to stay employed as a programmer, I’m going to have to change with it.",
    "Most of the effort in the software business goes into the maintenance of code that already exists.",
    "If you have a procedure with ten parameters, you probably missed some.",
    "Physics is the universe’s operating system.",
    "Simplicity does not precede complexity, but follows it",
    "Beauty is more important in computing than anywhere else in technology because software is so complicated. Beauty is the ultimate defense against complexity.",
    "Eighty percent of all input forms ask questions they have no business asking.",
    "It should be noted that no ethically-trained software engineer would ever consent to write a DestroyBaghdad procedure. Basic professional ethics would instead require him to write a DestroyCity procedure, to which Baghdad could be given as a parameter.",
    "Criticism isn’t just disliking things. Arts schools teach the skill & the respect for the work. Computer science schools don’t.",
    "Biology is the most powerful technology ever created. DNA is software, protein are hardware, cells are factories.",
    "If you make a general statement, a programmer says, ‘Yes, but…’ while a designer says, ‘Yes, and…’",
    "Just as it is a good practice to make all fields private unless they need greater visibility, it is a good practice to make all fields final unless they need to be mutable.",
    "The problem is, in software design, often the consequences of your decisions don’t become apparent for years.",
    "Innovation distinguishes between a leader and a follower.",
    "The problem with driving development with small scale tests (I call them “unit tests”, but they don’t match the accepted definition of unit tests very well) is that you run the risk of implementing what you think a user wants, but having it turn out to be not what they wanted at all.",
    "Programmers regard themselves as artists. As such they consider keeping accurate records of their handiwork on par with washing ash tray.",
    "Simplify, don’t complicate — especially processes, procedures and policies.",
    "Optimization hinders evolution. Everything should be built top-down, except the first time. Simplicity does not precede complexity, but follows it.",
    "If we wish to count lines of code, we should not regard them as “lines produced” but as “lines spent”.",
    "Each pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use this solution a million times over, without ever doing it the same way twice.",
    "While it is a known fact that programmers never make mistakes, it is still a good idea to humor the users by checking for errors at critical points in your program.",
    "Programming is similar to a game of golf. The point is not getting the ball in the hole but how many strokes it takes.",
    "When the final design seems too simple for the amount of work you’ve put in, then you know you’re done.",
    "The lesson is: Even if you know exactly what is going on in your system, measure performance, don’t speculate. You’ll learn something, and nine times out of ten, it won’t be that you were right!",
    "Less than 10% of the code has to do with the ostensible purpose of the system; the rest deals with input-output, data validation, data structure maintenance, and other housekeeping.",
    "Rather than apply minutes of suspect reasoning, we can just ask the computer by making the change and running the tests.",
    "When you are stuck in a traffic jam with a Porsche, all you do is burn more gas in idle. Scalability is about building wider roads, not about building faster cars.",
    "When I’m studying code, refactoring leads me to higher levels of understanding that I would otherwise miss. Those who dismiss comprehension refactoring as useless fiddling with the code don’t realize they never see the opportunities hidden behind the confusion.",
    "Don’t Live with Broken Windows",
    "If you put fences around people, you get sheep. GIve people the room they need.",
    "A computer lets you make more mistakes faster than any other invention with the possible exceptions of handguns and Tequila.",
    "Many people tend to look at programming styles and languages like religions: if you belong to one, you cannot belong to others. But this analogy is another fallacy.",
    "More good code has been written in languages denounced as “bad” than in languages proclaimed “wonderful” — much more.",
    "Just because something is easy to measure doesn’t mean it’s important.",
    "He who hasn’t hacked assembly language as a youth has no heart. He who does as an adult has no brain.",
    "Every craftsman starts his or her journey with a basic set of good-quality tools.",
    "Clearly, programming courses should teach methods of design and construction, and the selected examples should be such that a gradual development can be nicely demonstrated.",
    "If you want to do interesting software, you have to have a bunch of people do it, because the amount of software that one person can do isn’t that interesting.",
    "The most likely way for the world to be destroyed, most experts agree, is by accident. That’s where we come in; we’re computer professionals. We cause accidents.",
    "That’s the thing about people who think they hate computers. What they really hate is lousy programmers.",
    "Documentation is the castor oil of programming",
    "Some people are good programmers because they can handle many more details than most people. But there are a lot of disadvantages in selecting programmers for that reason — it can result in programs that no one else can maintain.",
    "The strength of JavaScript is that you can do anything. The weakness is that you will.",
    "Any man can make mistakes, but only an idiot persists in his error.",
    "I think you should always bear in mind that entropy is not on your side.",
    "When your code depends on an interface, that dependency is usually very minor and unobtrusive. Your code doesn’t have to change unless the interface changes, and interfaces typically change far less often than the code behind them. When you have an interface, you can edit classes that implement that interface or add new classes that implement the interface, all without impacting code that uses the interface.",
    "For this reason, it is better to depend on interfaces or abstract classes than it is to depend on concrete classes. When you depend on less volatile things, you minimize the chance that particular changes will trigger massive recompilation.",
    "It is easier to write an incorrect program than understand a correct one.",
    "Skilled and motivated programmers can overcome inadequate processes, but perfect processes can never compensate for inadequate programmers or poor software managers.",
    "Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.",
    "The key to efficient development is to make interesting new mistakes",
    "I’m not saying we purposely introduced bugs or anything, but this is kind of a natural result of any complexities of software… that you can’t fully test it.",
    "The use of COBOL cripples the mind; its teaching should therefore be regarded as a criminal offense.",
    "“Don’t fix it if it ain’t broke” presupposed that you can’t improve something that works reasonably well already. If the world’s inventors had believed this, we’d still be driving Model A Fords and using outhouses.",
    "God made the natural numbers; all else is the work of man.",
    "A data structure is just a stupid programming language.",
    "Sun Microsystems had the right people to make Java into a first-class language, and I believe it was the Sun marketing people who rushed the thing out before it should have gotten out.",
    "Languages that try to disallow idiocy become themselves idiotic.",
    "There are only two kinds of languages: the ones people complain about and the ones nobody uses.",
    "When I write software, I know that it will fail, either due to my own mistake, or due to some other cause.",
    "Encapsulate the concept that varies.",
    "If you can’t explain it simply, you don’t understand it well enough.",
    "A program is never less than 90% complete, and never more than 95% complete.",
    "Most xml i’ve seen makes me think i’m dyslexic. it also looks constipated, and two health problems in one standard is just too much.",
    "Everything will ultimately fail. Hardware is fallible, so we add redundancy. This allows us to survive individuals hardware failures, but increases the likelihood of having at least one failure at any given time.",
    "Any sufficiently advanced bug is indistinguishable from a feature.",
    "If you think you are worth what you know, you are very wrong. Your knowledge today does not have much value beyond a couple of years. Your value is what you can learn and how easily you can adapt to the changes this profession brings so often.",
    "Don’t wait until you have a bug to step through your code.",
    "First think about what the ultimate would be. Then take a step away from that, and another, until you get something you can build.",
    "We must not forget that the wheel is reinvented so often because it is a very good idea; I’ve learned to worry more about the soundness of ideas that were invented only once.",
    "It can be better to copy a little code than to pull in a big library for one function. Dependency hygiene trumps code reuse.",
    "Program construction consists of a sequence of refinement steps.",
    "Good engineering is the difference between code running in eight minutes or eight hours. It affects real people in real ways. It’s not a “matter of opinion.” any more than a bird taking a flight is a “matter of opinion.”",
    "In 2031, lawyers will be commonly a part of most development teams.",
    "The whole point of getting things done is knowing what to leave undone.",
    "Good programmers never write what they can steal or borrow.",
    "The art of debugging is figuring out what you really told your program to do rather than what you thought you told it to do.",
    "If you are choosing a JavaScript library purely based on popularity, I think you deserve what you get.",
    "A good threat is worth a thousand tests.",
    "So why was it so hard to tell a computer to do something only mildly complex? Well, it wasn’t the “mildly complex” part that was giving me problems; it was the “tell a computer” part.",
    "I think it is inevitable that people program poorly. Training will not substantially help matters. We have to learn to live with it.",
    "Tests are the Programmer’s stone, transmuting fear into boredom.",
    "Behavior is the most important thing about software. It is what users depend on. Users like it when we add behavior (provided it is what they really wanted), but if we change or remove behavior they depend on (introduce bugs), they stop trusting us.",
    "It is far easier to design a class to be thread-safe than to retrofit it for thread safety later.",
    "Science is a way of thinking much more than it is a body of knowledge.",
    "Code generation, like drinking alcohol, is good in moderation.",
    "Start out with finding the right problem to solve. This is a combination of “what customers are asking for”, “what customers don’t even know they want yet” and “what can be solved with something simple to understand and manage”",
    "Programming is usually taught by examples.",
    "The definition I use for a pattern is an idea that has been useful in one practical context and will probably be useful in others.",
    "What would happen if you allowed a bug to slip through a module, and it cost your company $10,000? The nonprofessional would shrug his shoulders, say “stuff happens,” and start writing the next module. The professional would write the company a check for $10,000!",
    "Design patterns should not be applied indiscriminately. Often they achieve flexibility and variability by introducing additional levels of indirection. A design pattern should only be applied when the flexibility it affords is actually needed.",
    "Good programmers use their brains, but good guidelines save us having to think out every case.",
    "Anytime you put a challenge out there, people come up with a creative solution on the software side.",
    "It’s OK to figure out murder mysteries, but you shouldn’t need to figure out code. You should be able to read it.",
    "In a room full of top software designers, if two agree on the same thing, that’s a majority.",
    "We are still in the infancy of naming what is really happening on software development projects.",
    "A programming language is for thinking about programs, not for expressing programs you’ve already thought of. It should be a pencil, not a pen.",
    "No crisis inside a computer is worth humiliating a human.",
    "Temporary variables can be a problem. They are only useful within their own routine, and therefore they encourage long, complex routines.",
    "It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: as potential programmers they are mentally mutilated beyond hope of regeneration.",
    "We have persistant objects, they’re called files.",
    "For us, the real goal is to make it so that the software ecosystem is as healthy as possible.",
    "An organization that treats its programmers as morons will soon have programmers that are willing and able to act like morons only.",
    "Don’t document the problem, fix it.",
    "We live in a world of misconceptions of thinking knowing syntax is at the heart of the problems. Lot of people believe there’s a technical solution to every problem and that it would be best for all us to sit in dark rooms working quietly by ourselves.",
    "Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.",
    "The problem with quick and dirty, is that the dirty remains long after the quick has been forgotten",
    "Of course bad code can be cleaned up. But it’s very expensive",
    "The workers and professionals of the world will soon be divided into two distinct groups. Those who will control computers and those who will be controlled by computers. It would be best for you to be in the former group.",
    "A programmable mind embraces mental agility, to practice “de-learning” and “relearning” all the time.",
    "There is only one thing more painful than learning from experience, and that is not learning from experience.",
    "Twenty percent of all input forms filled out by people contain bad data.",
    "Reducing a product’s definition to a list of features and functions ignores the real opportunity — orchestrating technological capability to serve human needs and goals.",
    "There is no single development, in either technology or management technique, which by itself promises even one order-of-magnitude improvement within a decade in productivity, in reliability, in simplicity.",
    "If you’re actually doing TDD, you’re throwing away tests all the time, as your understanding of what the code is changes.",
    "With good program architecture debugging is a breeze, because bugs will be where they should be.",
    "Complexity is a sign of technical immaturity. Simplicity of use is the real sign of a well design product whether it is an ATM or a Patriot missile.",
    "By relieving the brain of all unnecessary work, a good notation sets it free to concentrate on more advanced problems, and in effect increases the mental power of the race. Before the introduction of the Arabic notation, multiplication was difficult, and division even of integers called into play the highest mathematical faculties. Our modern power of easy reckoning with decimal fractions is the almost miraculous result of the gradual discovery of a perfect notation.",
    "The proper use of comments is to compensate for our failure to express ourselves in code.",
    "The best error message is the one that never shows up.",
    "On almost anything someone does in the computer business, you can go back in the literature and prove someone had done it earlier.",
    "If you lie to the compiler, it will get its revenge.",
    "The cost of adding a feature isn’t just the time it takes to code it. The cost also includes the addition of an obstacle to future expansion. The trick is to pick the features that don’t fight each other.",
    "Einstein repeatedly argued that there must be simplified explanations of nature, because God is not capricious or arbitrary. No such faith comforts the software engineer.",
    "You can mass-produce hardware; you cannot mass-produce software; you cannot mass-produce the human mind.",
    "It’s hard enough to find an error in your code when you’re looking for it; its even harder when you’ve assumed your code is error-free.",
    "Quality is never an accident; it is always the result of intelligent effort.",
    "The danger of standard process is that people will miss chances to take important shortcuts.",
    "I think my software is going to become so ubiquitous, so essential, that if it stops working, there will be riots.",
    "There is nothing so useless as doing efficiently that which should not be done at all.",
    "Software eventually and necessarily gained the same respect as any other discipline.",
    "There is no code so big, twisted, or complex that maintenance can’t make it worse.",
    "Computer scientists have so far worked on developing powerful programming languages that make it possible to solve the technical problems of computation. Little effort has gone toward devising the languages of interaction.",
    "When solving problems, dig at the roots instead of just hacking at the leaves.",
    "Fools ignore complexity. Pragmatists suffer it. Some can avoid it. Geniuses remove it.",
    "Small minds are concerned with the extraordinary, great minds with the ordinary.",
    "A primary cause of complexity is that software vendors uncritically adopt almost any feature that users want.",
    "Inheritance is surely a good answer but who knows the questions?",
    "Programming without an overall architecture or design in mind is like exploring a cave with only a flashlight: You don’t know where you’ve been, you don’t know where you’re going, and you don’t know quite where you are.",
    "A language that doesn’t have everything is actually easier to program in than some that do.",
    "A program that produces incorrect results twice as fast is infinitely slower.",
    "Programmers are as emotional and irrational as normal people.",
    "A bad system will beat a good person every time.",
    "Agile methods derive much of their agility by relying on the tacit knowledge embodied in the team, rather than writing the knowledge down in plans.",
    "One of the best things to come out of the home computer revolution could be the general and widespread understanding of how severely limited logic really is.",
    "Changes in software design will eventually mean “one step forward, two steps back”. It is inevitable.",
    "The sooner you start to code, the longer the program will take.",
    "A good enough first version will take longer to produce with $170K than it would have with $0K.",
    "In software design, it’s all about making a guess, trying it, and then learning from the experience.",
    "This will surprise some of your readers, but my primary interest is not with computer security. I am primarily interested in writing software that works as intended.",
    "Writing in C or C++ is like running a chain saw with all the safety guards removed.",
    "Be careful to preserve the orthogonality of your system as you introduce third-party toolkits and libraries. Choose your technologies wisely.",
    "I’m a victim of Developaralysis: the crippling sense that the software industry is evolving so fast that no one person can possibly keep up.",
    "Don’t patch bad code — rewrite it.",
    "The benefits of a truly effective new technology are foregone when, in the rush to try out the next shiny whiz-bang tool, we abandon the current one.",
    "If you have too many special cases, you are doing it wrong.",
    "My computer’s so fast it finishes an infinite loop in 5 minutes.",
    "There are two ways of constructing a software design. One way is to make it so simple that there are obviously no deficiencies. And the other way is to make it so complicated that there are no obvious deficiencies.",
    "Nothing is harder than working under a tight deadline and still taking the time to clean up as you go.",
    "Sometimes it is the people no one can imagine anything of who do the things no one can imagine.",
    "You haven’t mastered a tool until you understand when it should not be used.",
    "Don’t be (too) clever. My point was to discourage overly clever code because “clever code” is hard to write, easy to get wrong, harder to maintain, and often no faster than simpler alternatives because it can be hard to optimize.",
    "Redundant comments are just places to collect lies and misinformation.",
    "One of the most valuable things about TDD is that it lets us concentrate on one thing at a time. We are either writing code or refactoring; we are never doing both at once.",
    "A program which perfectly meets a lousy specification is a lousy program.",
    "Defect-free software does not exist.",
    "Beyond basic mathematical aptitude, the difference between good programmers and great programmers is verbal ability.",
    "One of the things I’ve been trying to do is look for simpler or rules underpinning good or bad design. I think one of the most valuable rules is avoiding duplication. “Once and only once” is the Extreme Programming phrase.",
    "We argue that design practices which take a data-driven approach fail to maximize encapsulation because they focus too quickly on the implementation of objects. We propose an alternative object-oriented design method which takes a responsibility-driven approach.",
    "On the seventh day, God said, “Ship it! We’ll release patches later.”",
    "Automated testing is a safety net that protects the program from its programmers.",
    "Syntactic sugar causes cancer of the semicolon.",
    "Referential transparency is a very desirable property: it implies that functions consistently yield the same results given the same input, irrespective of where and when they are invoked.",
    "Quality is the ally of schedule and cost, not their adversary. If we have to sacrifice quality to meet schedule, it’s because we are doing the job wrong from the very beginning.",
    "Defects are not free. Somebody makes them, and gets paid for making them.",
    "People tend to overestimate what can be done in one year and to underestimate what can be done in five or ten years.",
    ".. one of the main causes of the fall of the Roman Empire was that, lacking zero, they had no way to indicate successful termination of their C programs.",
    "The methodologies and best practices used to develop software can be applied successfully to any challenge in life.",
    "Software never was perfect and won’t get perfect. But is that a license to create garbage? The missing ingredient is our reluctance to quantify quality.",
    "You start digging in the code. The more you dig, the more stuff you turn up. Eventually you dig yourself into a hole you can’t get out of. To avoid digging your own grave, refactoring must be done systematically.",
    "Luck is the residue of design.",
    "The most important property of a program is whether it accomplishes the intention of its user.",
    "We know about as much about software quality problems as they knew about the Black Plague in the 1600s. We’ve seen the victims’ agonies and helped burn the corpses. We don’t know what causes it; we don’t really know if there is only one disease. We just suffer — and keep pouring our sewage into our water supply.",
    "A language that doesn’t affect the way you think about programming, is not worth knowing.",
    "Duplication is far cheaper than the wrong abstraction.",
    "Watch the little things; a small leak will sink a great ship.",
    "Successful software always gets changed.",
    "One difference between a smart programmer and a professional programmer is that the professional understands that clarity is king. Professionals use their powers for good and write code that others can understand.",
    "Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization’s communication structure.",
    "We’re entering a new world in which data may be more important than software.",
    "The most disastrous thing that you can ever learn is your first programming language.",
    "When you actually sit down to write some code, you learn things that you didn’t get from thinking about them in modeling terms…there is a feedback process there that you can only really get at from executing some things and seeing what works.",
    "First, solve the problem. Then, write the code.",
    "Sometimes it pays to stay in bed on Monday, rather than spending the rest of the week debugging Monday’s code.",
    "The Scrum idea of a separated Scrum Master is good for Scrum, but not appropriate for most projects. Good development requires not just talkers but doers.",
    "It´s more about good enough than it is about right or wrong.",
    "Smart data structures and dumb code works a lot better than the other way around.",
    "It’s easy to cry “bug” when the truth is that you’ve got a complex system and sometimes it takes a while to get all the components to co-exist peacefully.",
    "Static typing is to reliable programming what a spelling checker is to a good writer.",
    "Optimism is an occupational hazard of programming: feedback is the treatment.",
    "Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.",
    "Any fool can write code that a computer can understand. Good programmers write code that humans can understand.",
    "Good programming is good writing.",
    "The trouble with programmers is that you can never tell what a programmer is doing until it’s too late.",
    "The heart of software is its ability to solve domain-related problems for its user. All other features, vital though they may be, support this basic purpose",
    "Thinking about my experience of modifying code, I see that I spend much more time reading the existing code than I do writing new code. If I want to make my code cheap, therefore, I should make it easy to read.",
    "If you automate a mess, you get an automated mess.",
    "There is absolutely no reason to make computers as stupid as people are.",
    "Programs are meant to be read by humans and only incidentally for computers to execute.",
    "You will fall to ruin because you believe that exceptions to the rule make new rules.",
    "The ratio of time spent reading (code) versus writing is well over 10 to 1 … (therefore) making it easy to read makes it easier to write.",
    "Don’t worry about design, if you listen to your code a good design will appear…Listen to the technical people. If they are complaining about the difficulty of making changes, then take such complaints seriously and give them time to fix things.",
    "People think that computer science is the art of geniuses but the actual reality is the opposite, just many people doing things that build on each other, like a wall of mini stones.",
    "Code should be remarkably expressive to avoid most of the comments. There’ll be a few exceptions, but we should see comments as an ‘failure of expression’ until proven wrong.",
    "If it takes more than a sentence to explain what you are doing, it’s almost always a sign that what you are doing is too complicated.",
    "Take reasonable steps to test, document, and otherwise draw attention to the assumptions made in every module and routine.",
    "The primary disadvantage of Wrap Method is that it can lead to poor names. In the previous example, we renamed the pay method dispatchPay() just because we needed a different name for code in the original method.",
    "A heuristic we follow is that whenever we feel the need to comment something, we write a method instead.",
    "When debugging, novices insert corrective code; experts remove defective code.",
    "In programming, if someone tells you “you’re overcomplicating it,” they’re either 10 steps behind you or 10 steps ahead of you.",
    "Language designers are not intellectuals. They’re not as interested in thinking as you might hope. They just want to get a language done and start using it.",
    "That’s why I write, because life never works except in retrospect. You can’t control life, at least you can control your version.",
    "A programming language is low level when its programs require attention to the irrelevant.",
    "No matter how slow you are writing clean code, you will always be slower if you make a mess.",
    "The last good thing written in C was Franz Schubert’s Symphony Number 9.",
    "The most beautiful code, the most beautiful functions, and the most beautiful programs are sometimes not there at all.",
    "The problem with using C++… is that there’s already a strong tendency in the language to require you to know everything before you can do anything.",
    "The language in which we express our ideas has a strong influence on our thought processes.",
    "That which optimizes one part of the system necessarily undermines the system as a whole.",
    "There are two ways to write code: write code so simple there are obviously no bugs in it, or write code so complex that there are no obvious bugs in it.",
    "Indeed, the woes of Software Engineering are not due to lack of tools, or proper management, but largely due to lack of sufficient technical competence.",
    "We have to stop optimizing for programmers and start optimizing for users.",
    "Error handling is important, but if it obscures logic, it’s wrong.",
    "I hired finishers because I’m a good starter and a poor finisher.",
    "If you get tired of writing for loops, take a break and continue later.",
    "The nice thing about standards is that there are so many to choose from.",
    "Deleted code is debugged code.",
    "A good programmer is someone who always looks both ways before crossing a one-way street.",
    "The cleaner and nicer the program, the faster it’s going to run. And if it doesn’t, it’ll be easy to make it fast.",
    "The best programmers write only easy programs.",
    "It’s not at all important to get it right the first time. It’s vitally important to get it right the last time.",
    "The computer programmer is a creator of universes for which he alone is the lawgiver. No playwright, no stage director, no emperor, however powerful, has exercised such absolute authority to arrange a stage or field of battle.",
    "Prolific developers don’t always write a lot of code, instead they solve a lot of problems. The two things are not the same.",
    "Software and cathedrals are much the same. First we build them, then we pray.",
    "In essence, engineering is doing what you want with what you have.",
    "I love software, because if you can imagine something, you can build it.",
    "Copy and paste is a design error.",
    "If you have three pet dogs, give them names. If you have 10,000 head of cattle, don’t bother. Nowadays, the idea of giving a name to every file on your computer is ridiculous.",
    "The best smells are something that’s easy to spot and most of time lead you to really interesting problems. Data classes (classes with all data and no behavior) are good examples of this. You look at them and ask yourself what behavior should be in this class.",
    "Writing software as if we are the only person that ever has to comprehend it is one of the biggest mistakes and false assumptions that can be made.",
    "A cache with a bad policy is another name for a memory leak.",
    "Companies should make their own enterprise systems as often as network security companies should manufacture their own aspirin.",
    "Simplicity is the soul of efficiency.",
    "Every time you write a comment, you should grimace and feel the failure of your ability of expression",
    "The value of a prototype is in the education it gives you, not in the code itself.",
    "Some people, when confronted with a problem, think “I know, I’ll use regular expressions.” Now they have two problems.",
    "Write shy code — modules that don’t reveal anything unnecessary to other modules and that don’t rely on other modules’ implementations.",
    "It is not the language that makes programs appear simple. It is the programmer that make the language appear simple.",
    "If you have to spend effort looking at a fragment of code and figuring out what it’s doing, then you should extract it into a function and name the function after the what.",
    "Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.",
    "Without requirements or design, programming is the art of adding bugs to an empty text file.",
    "A computer is a stupid machine with the ability to do incredibly smart things, while computer programmers are smart people with the ability to do incredibly stupid things. They are, in short, a perfect match.",
    "Never spend 6 minutes doing something by hand when you can spend 6 hours failing to automate it.",
    "Make it correct, make it clear, make it concise, make it fast. In that order.",
    "Programming is not a zero-sum game. Teaching something to a fellow programmer doesn’t take it away from you.",
    "It is not the language that makes programs appear simple. It is the programmer that make the language appear simple!",
    "Programming can be fun, so can cryptography; however they should not be combined.",
    "The amateur software engineer is always in search of magic.",
    "Any code of your own that you haven’t looked at for six or more months might as well have been written by someone else.",
    "Don’t comment bad code — rewrite it.",
    "Code is like humor. When you have to explain it, it’s bad.",
    "Truth can only be found in one place: the code.",
    "If you say “I told you so”, you are the one who has failed. Because you knew, but did not manage to stop the train wreck.",
    "It’s harder to read code than to write it.",
    "So much complexity in software comes from trying to make one thing do two things.",
    "One day my daughter came in, looked over my shoulder at some Perl 4 code, and said, “What is that, swearing?”",
    "A long descriptive name is better than a short enigmatic name. A long descriptive name is better than a long descriptive comment. -",
    "Talk is cheap. Show me the code.",
    "Legacy code is code without tests.",
    "Software testing is not only ensuring absence of bugs but also ensuring presence of value.",
    "It is easier to change the specification to fit the program than vice versa.",
    "Beware of bugs in the above code; I have only proved it correct, not tried it.",
    "Regardless of your plans, production is the ultimate testing environment.",
    "One man’s crappy software is another man’s full time job.",
    "Good software, like wine, takes time.",
    "Pay attention to zeros. If there is a zero, someone will divide by it.",
    "Somebody will say they have a program that’s verified and it’s only verified because it met its specification according to some verifier. But the verifier might have bugs in it. The specifications might have bugs in them.",
    "Beta testing is a symptom of weak testing practices and poor communication with customers.",
    "Discovering the unexpected is more important than confirming the known.",
    "Pasting code from the internet into production code is like chewing gum found in the street.",
    "The most important single aspect of software development is to be clear about what you are trying to build.",
    "A Perl program is correct if it gets the job done before your boss fires you.",
    "If debugging is the process of removing software bugs, then programming must be the process of putting them in.",
    "The key to building a great product is building a great team first. To me, great teams aren’t bound by roles, but they’re driven by moving forward.",
    "The pesticide paradox. Every method you use to prevent or find bugs leaves a residue of subtler bugs against which those methods are ineffective.",
    "I try to think mostly in terms of preconditions, and checking things in the constructor and the beginning of a function.",
    "Developer testing is an important step towards accountability. It gives developers a way to demonstrate the quality of the software they produce.",
    "The role of a trainer or consultant is to empower the customer, not to make himself indispensable.",
    "Correctness is clearly the prime quality. If a system does not do what it is supposed to do, then everything else about it matters little.",
    "Quality is free, but only to those who are willing to pay heavily for it.",
    "Nothing makes a system more flexible than a suite of tests -",
    "With tests, we can change the behavior of our code quickly and verifiably.",
    "Without them, we really don’t know if our code is getting better or worse.”",
    "There are two ways to write error-free programs; only the third one works.",
    "As a rule, software systems do not work well until they have been used, and have failed repeatedly, in real applications.",
    "As the Tests get more Specific, the Code gets more Generic.",
    "Whenever I have to think to understand what the code is doing, I ask myself if I can refactor the code to make that understanding more immediately apparent.",
    "Let there be no doubt that object-oriented design is fundamentally different than traditional structured design approaches: it requires different ways of thinking about decomposition, and it produces software architectures that are largely outside the realm of the structured design culture.",
    "I invented the term ‘object oriented’, and C++ was not what I had in mind",
    "Computers are good at following instructions, but not at reading your mind"
];

export default quotes;